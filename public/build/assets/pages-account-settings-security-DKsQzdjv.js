$.ajaxSetup({headers:{"X-CSRF-TOKEN":$('meta[name="csrf-token"]').attr("content")}});document.addEventListener("DOMContentLoaded",function(n){(function(){const t=document.querySelector("#formAccountSettings"),a=document.querySelector("#formAccountSettingsApiKey");t&&FormValidation.formValidation(t,{fields:{currentPassword:{validators:{notEmpty:{message:"Please current password"},stringLength:{min:8,message:"Password must be more than 8 characters"}}},password:{validators:{notEmpty:{message:"Please enter a new password"},stringLength:{min:8,message:"Password must be at least 8 characters long"},regexp:{regexp:/^(?=.*[a-z])(?=.*[\d\W\s]).+$/,message:"Password must contain at least one lowercase letter and at least one number, symbol, or whitespace"}}},confirmPassword:{validators:{notEmpty:{message:"Please confirm new password"},identical:{compare:function(){return t.querySelector('[name="password"]').value},message:"The password and its confirm are not the same"},stringLength:{min:8,message:"Password must be more than 8 characters"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:"",rowSelector:".col-md-6"}),submitButton:new FormValidation.plugins.SubmitButton,autoFocus:new FormValidation.plugins.AutoFocus},init:e=>{e.on("plugins.message.placed",function(s){s.element.parentElement.classList.contains("input-group")&&s.element.parentElement.insertAdjacentElement("afterend",s.messageElement)})}}).on("core.form.valid",function(){$.ajax({data:$(t).serialize(),url:`${baseUrl}update-password`,type:"POST",success:function(e){Swal.fire({icon:"success",title:`Successfully ${e}!`,text:`Password ${e} Successfully.`,customClass:{confirmButton:"btn btn-success"}})},error:function(e){e.status===422&&e.responseJSON&&e.responseJSON.message?Swal.fire({title:"Error!",text:e.responseJSON.message,icon:"error",customClass:{confirmButton:"btn btn-danger"}}):Swal.fire({title:"Not Updated!",text:"Password Not Updated.",icon:"error",customClass:{confirmButton:"btn btn-success"}})}})}),a&&FormValidation.formValidation(a,{fields:{apiKey:{validators:{notEmpty:{message:"Please enter API key name"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap5:new FormValidation.plugins.Bootstrap5({eleValidClass:""}),submitButton:new FormValidation.plugins.SubmitButton,autoFocus:new FormValidation.plugins.AutoFocus},init:e=>{e.on("plugins.message.placed",function(s){s.element.parentElement.classList.contains("input-group")&&s.element.parentElement.insertAdjacentElement("afterend",s.messageElement)})}})})()});$(function(){var n=$(".select2");n.length&&n.each(function(){var t=$(this);t.wrap('<div class="position-relative"></div>'),t.select2({dropdownParent:t.parent()})})});
